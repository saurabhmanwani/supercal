package com.optus.supercal.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;


import org.codehaus.jackson.annotate.JsonIgnore;
//import org.hibernate.annotations.Cascade;
import org.hibernate.validator.constraints.Length;

/**
 * EmailTemplate generated by hbm2java
 */
@Entity
@Table(name = "EMAIL_TEMPLATE", catalog = "supercal")
public class EmailTemplate implements java.io.Serializable {

	private static final long serialVersionUID = -5724145395982144075L;
	private Integer id;
	private Product product;
	private String emailTemplateName;
	private String templateType;	
	private String subject;
	private String topTextArea;
	private String bottomTextArea;
	private byte[] topBanner;
	private byte[] bottomBanner;
	private byte[] topTransientBanner;
	private byte[] bottomTransientBanner;	
	private String fieldSource;
	private String channel;
	
	private Set<EmailTemplateOpomFieldConfig> emailTemplateOpomFieldConfigs
		= new HashSet<EmailTemplateOpomFieldConfig>(0);
	private Set<EmailTemplateBoltOnFieldConfig> emailTemplateBoltOnFieldConfigs
		= new HashSet<EmailTemplateBoltOnFieldConfig>(0);
	private Set<EmailTemplateRatePlanFieldConfig> emailTemplateRatePlanFieldConfigs
		= new HashSet<EmailTemplateRatePlanFieldConfig>(0);

	public EmailTemplate() {
	}

	public EmailTemplate(Product product, String emailTemplateName, String subject,
			String topTextArea, String bottomTextArea, byte[] topBanner,
			byte[] bottomBanner) {
		this.product = product;
		this.emailTemplateName = emailTemplateName;
		this.subject = subject;
		this.topTextArea = topTextArea;
		this.bottomTextArea = bottomTextArea;
		this.topBanner = topBanner;
		this.bottomBanner = bottomBanner;
	}
	public EmailTemplate(Product product, String emailTemplateName, String subject,
			String topTextArea, String bottomTextArea, byte[] topBanner,
			byte[] bottomBanner, String fieldSource,
			Set<EmailTemplateOpomFieldConfig> emailTemplateOpomFieldConfigs,
			Set<EmailTemplateBoltOnFieldConfig> emailTemplateBoltOnFieldConfigs,
			Set<EmailTemplateRatePlanFieldConfig> emailTemplateRatePlanFieldConfigs) {
		this.product = product;
		this.emailTemplateName = emailTemplateName;
		this.subject = subject;
		this.topTextArea = topTextArea;
		this.bottomTextArea = bottomTextArea;
		this.topBanner = topBanner;
		this.bottomBanner = bottomBanner;
		this.fieldSource = fieldSource;
		this.emailTemplateOpomFieldConfigs = emailTemplateOpomFieldConfigs;
		this.emailTemplateBoltOnFieldConfigs = emailTemplateBoltOnFieldConfigs;
		this.emailTemplateRatePlanFieldConfigs = emailTemplateRatePlanFieldConfigs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PRODUCT_ID", nullable = false)
	@NotNull
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "EMAIL_TEMPLATE_NAME", nullable = false, length = 150)
	@NotNull
	@Length(max = 150)
	public String getEmailTemplateName() {
		return this.emailTemplateName;
	}

	public void setEmailTemplateName(String emailTemplateName) {
		this.emailTemplateName = emailTemplateName;
	}

	@Column(name = "TEMPLATE_TYPE", nullable = false)
	@NotNull
	public String getTemplateType() {
		return this.templateType;
	}

	public void setTemplateType(String templateType) {
		this.templateType = templateType;
	}

	@Column(name = "SUBJECT", nullable = false, length = 250)
	@NotNull
	@Length(max = 250)
	public String getSubject() {
		return this.subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}

	@Column(name = "TOP_TEXT_AREA", nullable = true)
	public String getTopTextArea() {
		return this.topTextArea;
	}

	public void setTopTextArea(String topTextArea) {
		this.topTextArea = topTextArea;
	}

	@Column(name = "BOTTOM_TEXT_AREA", nullable = true)
	public String getBottomTextArea() {
		return this.bottomTextArea;
	}

	public void setBottomTextArea(String bottomTextArea) {
		this.bottomTextArea = bottomTextArea;
	}

	@Column(name = "TOP_BANNER", nullable = true)
	public byte[] getTopBanner() {
		return this.topBanner;
	}

	public void setTopBanner(byte[] topBanner) {
		this.topBanner = topBanner;
	}

	@Column(name = "BOTTOM_BANNER", nullable = true)
	public byte[] getBottomBanner() {
		return this.bottomBanner;
	}

	public void setBottomBanner(byte[] bottomBanner) {
		this.bottomBanner = bottomBanner;
	}

	@Column(name = "FIELD_SOURCE", nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getFieldSource() {
		return this.fieldSource;
	}

	public void setFieldSource(String fieldSource) {
		this.fieldSource = fieldSource;
	}
	
	@Column(name = "CHANNEL", length = 15)
	@Length(max = 15)
	public String getChannel() {
		return this.channel;
	}

	public void setChannel(String channel) {
		this.channel = channel;
	}
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, cascade=CascadeType.ALL,
			mappedBy = "emailTemplate", orphanRemoval=true)
	/*@Cascade(value={org.hibernate.annotations.CascadeType.ALL, 
			org.hibernate.annotations.CascadeType.DELETE_ORPHAN})*/
	public Set<EmailTemplateOpomFieldConfig> getEmailTemplateOpomFieldConfigs() {
		return this.emailTemplateOpomFieldConfigs;
	}

	public void setEmailTemplateOpomFieldConfigs(
			Set<EmailTemplateOpomFieldConfig> emailTemplateOpomFieldConfigs) {
		this.emailTemplateOpomFieldConfigs = emailTemplateOpomFieldConfigs;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, cascade=CascadeType.ALL,
			mappedBy = "emailTemplate", orphanRemoval=true)
//	@Cascade(value={org.hibernate.annotations.CascadeType.ALL, 
//			org.hibernate.annotations.CascadeType.DELETE_ORPHAN})
	public Set<EmailTemplateBoltOnFieldConfig> getEmailTemplateBoltOnFieldConfigs() {
		return this.emailTemplateBoltOnFieldConfigs;
	}

	public void setEmailTemplateBoltOnFieldConfigs(
			Set<EmailTemplateBoltOnFieldConfig> emailTemplateBoltOnFieldConfigs) {
		this.emailTemplateBoltOnFieldConfigs = emailTemplateBoltOnFieldConfigs;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, cascade=CascadeType.ALL,
			mappedBy = "emailTemplate", orphanRemoval=true)
/*	@Cascade(value={org.hibernate.annotations.CascadeType.ALL, 
			org.hibernate.annotations.CascadeType.DELETE_ORPHAN})*/
	public Set<EmailTemplateRatePlanFieldConfig> getEmailTemplateRatePlanFieldConfigs() {
		return this.emailTemplateRatePlanFieldConfigs;
	}

	public void setEmailTemplateRatePlanFieldConfigs(
			Set<EmailTemplateRatePlanFieldConfig> emailTemplateRatePlanFieldConfigs) {
		this.emailTemplateRatePlanFieldConfigs = emailTemplateRatePlanFieldConfigs;
	}
	
	@Transient
	public byte[] getTransientTopBanner() {
		return this.topTransientBanner;
	}

	public void setTransientTopBanner(byte[] topTransientBanner) {
		this.topTransientBanner = topTransientBanner;
	}

	@Transient
	public byte[] getTransientBottomBanner() {
		return this.bottomTransientBanner;
	}

	public void setTransientBottomBanner(byte[] bottomTransientBanner) {
		this.bottomTransientBanner = bottomTransientBanner;
	}
	
	@Transient
	public List<EmailTemplateOpomFieldConfig> getOpomFieldConfigList() {
		List<EmailTemplateOpomFieldConfig> opomFieldConfigList
			= new ArrayList<EmailTemplateOpomFieldConfig>(
					getEmailTemplateOpomFieldConfigs());
		Collections.sort(opomFieldConfigList);
		return opomFieldConfigList;
	}

	@Transient
	public List<OpomEmailField> getSfOpomEmailFieldList() {
		List<OpomEmailField> sfOpomEmailFields 
			= new ArrayList<OpomEmailField>(0);

		for (EmailTemplateOpomFieldConfig emailTemplateOpomFieldConfig 
			: getOpomFieldConfigList()) {
			if ("SF".equals(emailTemplateOpomFieldConfig
					.getFieldDisplayFormat())) {
				sfOpomEmailFields.add(emailTemplateOpomFieldConfig
						.getOpomEmailField());
			} 
		}
		return sfOpomEmailFields;
	}

	@Transient
	public List<OpomEmailField> getTfOpomEmailFieldList() {
		List<OpomEmailField> tfOpomEmailFields
			= new ArrayList<OpomEmailField>(0);
		for (EmailTemplateOpomFieldConfig emailTemplateOpomFieldConfig 
				: getOpomFieldConfigList()) {
			if ("TF".equals(emailTemplateOpomFieldConfig
				.getFieldDisplayFormat())) {
				tfOpomEmailFields.add(emailTemplateOpomFieldConfig
					.getOpomEmailField());
			}
		}
		return tfOpomEmailFields;
	}
	
	@Transient
	public List<OpomEmailField> getOpomEmailFieldList() {
		List<OpomEmailField> opomEmailFields
			= new ArrayList<OpomEmailField>(0);
		for (EmailTemplateOpomFieldConfig emailTemplateOpomFieldConfig 
				: getOpomFieldConfigList()) {
			opomEmailFields.add(emailTemplateOpomFieldConfig
					.getOpomEmailField());
		}
		return opomEmailFields;
	}
	
	@Transient
	public List<EmailTemplateRatePlanFieldConfig> getRatePlanFieldConfigList() {
		List<EmailTemplateRatePlanFieldConfig> ratePlanFieldConfigList
			= new ArrayList<EmailTemplateRatePlanFieldConfig>(
					getEmailTemplateRatePlanFieldConfigs());
		Collections.sort(ratePlanFieldConfigList);
		return ratePlanFieldConfigList;
	}
	
	@Transient
	public List<EmailTemplateBoltOnFieldConfig> getBoltOnFieldConfigList() {
		List<EmailTemplateBoltOnFieldConfig> boltOnFieldConfigList
			= new ArrayList<EmailTemplateBoltOnFieldConfig>(
					getEmailTemplateBoltOnFieldConfigs());
		Collections.sort(boltOnFieldConfigList);
		return boltOnFieldConfigList;
	}
}
