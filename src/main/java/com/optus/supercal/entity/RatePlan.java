package com.optus.supercal.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.hibernate.validator.constraints.Length;

/**
 * RatePlan generated by hbm2java
 */
@Entity
@Table(name = "RATE_PLAN", catalog = "supercal")
public class RatePlan implements java.io.Serializable {

	private static final long serialVersionUID = 1012529053826166992L;
	private static final String CLONE = " Copy";
	private Integer id;
	private String ratePlanId;
	private String status;
	private Set<RatePlanFieldValue> ratePlanFieldValues
		= new HashSet<RatePlanFieldValue>(0);

	public RatePlan() {
	}

	public RatePlan(String ratePlanId, String status) {
		this.ratePlanId = ratePlanId;
		this.status = status;
	}
	
	public RatePlan(String ratePlanId, String status,
			Set<RatePlanFieldValue> ratePlanFieldValues) {
		this.ratePlanId = ratePlanId;
		this.status = status;
		this.ratePlanFieldValues = ratePlanFieldValues;
	}

	public RatePlan(RatePlan masterRatePlan) {
		this.ratePlanId = masterRatePlan.ratePlanId + CLONE;
		this.status = masterRatePlan.status;
		for (RatePlanFieldValue ratePlanFieldValue : 
			masterRatePlan.getRatePlanFieldValues()) {
			RatePlanFieldValue fieldValue = new RatePlanFieldValue(
					ratePlanFieldValue.getRatePlanFamilyFieldConfig(), 
					this, ratePlanFieldValue.getRatePlanFieldValue());
			this.getRatePlanFieldValues().add(fieldValue);
		}
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "RATE_PLAN_ID", nullable = false)
	@NotNull
	public String getRatePlanId() {
		return this.ratePlanId;
	}

	public void setRatePlanId(String ratePlanId) {
		this.ratePlanId = ratePlanId;
	}

	@Column(name = "STATUS", nullable = false, length = 8)
	@NotNull
	@Length(max = 8)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER, cascade=CascadeType.ALL,
			mappedBy = "ratePlan")	
	public Set<RatePlanFieldValue> getRatePlanFieldValues() {
		return this.ratePlanFieldValues;
	}

	public void setRatePlanFieldValues(
			Set<RatePlanFieldValue> ratePlanFieldValues) {
		this.ratePlanFieldValues = ratePlanFieldValues;
	}
	
	@Transient
	public RatePlanFamily getRatePlanFamily() {
		if (ratePlanFieldValues.isEmpty()) {
			return null;
		} else {
			return ratePlanFieldValues.iterator().next()
					.getRatePlanFamilyFieldConfig().getRatePlanFamily();
		}
	}
	
	@Transient
	public Product getProduct() {
		if (ratePlanFieldValues.isEmpty()) {
			return null;
		} else {
			return ratePlanFieldValues.iterator().next()
				.getRatePlanFamilyFieldConfig().getRatePlanFamily().getProduct();
		}
	}
}
